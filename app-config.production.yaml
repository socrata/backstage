app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: http://localhost:7007

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: http://localhost:7007
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen: ':7007'

  # config options: https://node-postgres.com/apis/client
  database:
    client: pg
    pluginDivisionMode: schema # plugins get their own schema
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}

auth: # see https://backstage.io/docs/auth/ to learn about auth providers
#  environment: production
#  providers:
#    atlassian: # See https://backstage.io/docs/auth/atlassian/provider/
#      production:
#        clientId: ${AUTH_ATLASSIAN_CLIENT_ID}
#        clientSecret: ${AUTH_ATLASSIAN_CLIENT_SECRET}
#        callbackUrl: 'https://localhost:7007/api/auth/atlassian/handler/frame'
#        additionalScopes:
#          - 'write:jira-work'
#        signIn:
#          resolvers:
#            - resolver: emailMatchingUserEntityProfileEmail
#            - resolver: emailLocalPartMatchingUserEntityName
#            - resolver: usernameMatchingUserEntityName

catalog:
  # Overrides the default list locations from app-config.yaml as these contain example data.
  # See https://backstage.io/docs/features/software-catalog/#adding-components-to-the-catalog for more details
  # on how to get entities into the catalog.
  locations:
    # Local example data, replace this with your production config, these are intended for demo use only.
    # File locations are relative to the backend process, typically in a deployed context, such as in a Docker container, this will be the root
    - type: file
      target: ./examples/entities.yaml

    # Local example template
    - type: file
      target: ./examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ./examples/org.yaml
      rules:
        - allow: [User, Group]
